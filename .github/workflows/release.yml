
name: Release tmproxy

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.5' # Specify a Go version

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Get test
        run: go test -timeout 10s ./...

      - name: Build for Linux (amd64)
        run: GOOS=linux GOARCH=amd64 go build -o release/tmproxy-linux-amd64 main.go

      - name: Build for Linux (arm64)
        run: GOOS=linux GOARCH=arm64 go build -o release/tmproxy-linux-arm64 main.go

      - name: Build for Linux (armv6)
        run: GOOS=linux GOARCH=arm GOARM=6 go build -o release/tmproxy-linux-armv6 main.go

      - name: Build for Linux (armv7)
        run: GOOS=linux GOARCH=arm GOARM=7 go build -o release/tmproxy-linux-armv7 main.go

      - name: Build for Windows (amd64)
        run: GOOS=windows GOARCH=amd64 go build -o release/tmproxy-windows-amd64.exe main.go

      - name: Build for macOS (amd64)
        run: GOOS=darwin GOARCH=amd64 go build -o release/tmproxy-darwin-amd64 main.go

      - name: Build for macOS (arm64)
        run: GOOS=darwin GOARCH=arm64 go build -o release/tmproxy-darwin-arm64 main.go

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux (amd64) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-linux-amd64
          asset_name: tmproxy-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux (arm64) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-linux-arm64
          asset_name: tmproxy-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Linux (armv6) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-linux-armv6
          asset_name: tmproxy-linux-armv6
          asset_content_type: application/octet-stream

      - name: Upload Linux (armv7) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-linux-armv7
          asset_name: tmproxy-linux-armv7
          asset_content_type: application/octet-stream

      - name: Upload Windows (amd64) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-windows-amd64.exe
          asset_name: tmproxy-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS (amd64) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-darwin-amd64
          asset_name: tmproxy-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS (arm64) Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/tmproxy-darwin-arm64
          asset_name: tmproxy-darwin-arm64
          asset_content_type: application/octet-stream

      - run: mv release clients
      - uses: montudor/action-zip@v1
        with:
          args: zip -qq -r clients.zip clients

      - name: Upload clients Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./clients.zip
          asset_name: clients.zip
          asset_content_type: application/octet-stream
